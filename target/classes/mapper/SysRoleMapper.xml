<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiangzi.dao.SysRoleMapper">
    <resultMap id="BaseResultMap" type="com.xiangzi.model.SysRole">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="available" jdbcType="BIT" property="available"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, available, name, created_time, modify_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_role
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.xiangzi.model.SysRole">
    insert into sys_role (id, available, name, 
      created_time, modify_time)
    values (#{id,jdbcType=INTEGER}, #{available,jdbcType=BIT}, #{name,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.xiangzi.model.SysRole">
        insert into sys_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="available != null">
                available,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="available != null">
                #{available,jdbcType=BIT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xiangzi.model.SysRole">
        update sys_role
        <set>
            <if test="available != null">
                available = #{available,jdbcType=BIT},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xiangzi.model.SysRole">
    update sys_role
    set available = #{available,jdbcType=BIT},
      name = #{name,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="findRoles" resultType="com.xiangzi.model.SysRole">
    SELECT
        r.*
    FROM
        sys_user u
        LEFT JOIN sys_user_role ur ON u.uid = ur.uid
        LEFT JOIN sys_role r ON ur.role_id = r.id
    WHERE
        r.available = 0
        AND u.uid = #{userId}
  </select>

</mapper>